version: '3.3'

#services describe the containers that will start
services:
  # api is the container name for our Go API
  backend:
    # specifies the latest api image
    image: golang-fiber-base-project:latest
    # It will look for a Dockerfile in the project root and build it
    build: "."
    # Exposes the port 8088 from a container and binds it to a random port
    ports:
      - "8088"
    # If the container goes down, it will restart
    restart: "always"
    # Connects the API to a common base-project bridge
    networks:
      - "base-project"
    # Starts up 1 replicas of the same image
    deploy:
      replicas: 1
  # nginx container
  nginx:
    # specifies the latest nginx image
    image: nginx:latest
    # Connects the conf file of the container to the conf file in our folder
    volumes:
      - ./platform/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    # It will start up the nginx only when all api containers have started
    depends_on:
      - backend
    # Connects the port 80 of the nginx container to localhost:80 or localhost
    ports:
      - "8080:8080"
    networks:
      - "base-project"
networks:
  base-project: